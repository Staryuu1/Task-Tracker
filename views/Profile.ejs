<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
</head>
<body class="bg-gray-100 text-gray-800">
    <div class="container mx-auto p-6">
        <!-- Navbar -->
        <div class="flex justify-between items-center mb-6">
            <h1 class="text-2xl font-bold">Profile</h1>
            <div>
                <a href="/tasks" class="text-gray-600 hover:text-gray-800 mr-4">Home</a>
                <a href="/auth/logout" class="text-gray-600 hover:text-gray-800">Logout</a>
            </div>
        </div>

        <!-- Profile Card -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="mb-6">
                <h2 class="text-2xl font-bold"><%= user.username %></h2>
                <p class="text-gray-600"><%= user.email %></p>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <!-- Personal Information -->
                <div>
                    <h3 class="text-lg font-semibold mb-3">Personal Information</h3>

                    <div class="flex justify-between items-center">
                        <p><strong>Full Name:</strong> <%= profile.name %></p>
                        <button class="text-gray-500 hover:text-black edit-name" data-id="<%= profile._id %>">
                            <i class="fas fa-edit"></i>
                        </button>
                    </div>

                    <div class="flex justify-between items-center">
                        <p><strong>Email:</strong> <%= user.email %></p>
                    </div>

                    <div class="flex justify-between items-center">
                        <p><strong>Phone:</strong> <%= profile.phoneNumber %></p>
                        <button class="text-gray-500 hover:text-black edit-phone" data-id="<%= profile._id %>">
                            <i class="fas fa-edit"></i>
                        </button>
                    </div>
                </div>

                <!-- Change Password -->
                <div>
                    <h3 class="text-lg font-semibold mb-3">Change Password</h3>
                    <form>
                        <div class="mb-4">
                            <label class="block text-gray-700" for="current-password">Current Password</label>
                            <input class="w-full px-4 py-2 border rounded" id="current-password" type="password"/>
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700" for="new-password">New Password</label>
                            <input class="w-full px-4 py-2 border rounded" id="new-password" type="password"/>
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700" for="confirm-password">Confirm New Password</label>
                            <input class="w-full px-4 py-2 border rounded" id="confirm-password" type="password"/>
                        </div>
                        <button class="bg-blue-500 text-white px-4 py-2 rounded w-full" type="submit">
                            Update Password
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll(".edit-phone").forEach((button) => {
            button.addEventListener("click", async function() {
                const profileId = this.getAttribute("data-id");

                try {
                const response = await fetch(`/profile/get/${profileId}`, {
                    method: "GET",
                    headers: { "Content-Type": "application/json" },
                });

                if (!response.ok) {
                    throw new Error("Failed to fetch task");
                }

                const profile = await response.json();

                Swal.fire({
                    title: "Edit Phone Number",
                    html: `
                    <input type="text" id="phone-number" class="swal2-input" placeholder="Phone-Number" value="${profile.phoneNumber}">
                    `,
                    showCancelButton: true,
                    confirmButtonText: "Save",
                    preConfirm: () => {
                    const Number = document.getElementById("phone-number").value.trim();
                   

                    if (!Number ) {
                        Swal.showValidationMessage("Please enter all fields");
                        return false;
                    }

                    return { Number};
                    },
                }).then((result) => {
                    if (result.isConfirmed && result.value) {
                    fetch(`/profile/edit-phone/${profileId}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(result.value),
                    })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.error) throw new Error(data.error);
                        Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "Phone Number updated successfully",
                        }).then(() => location.reload());
                    })
                    .catch((error) => {
                        Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: error.message || "Failed to update Phone Number",
                        });
                    });
                    }
                });
                } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: error.message || "Failed to fetch Phone Number",
                });
                }
            });
        });

        document.querySelectorAll(".edit-name").forEach((button) => {
            button.addEventListener("click", async function() {
                const profileId = this.getAttribute("data-id");

                try {
                const response = await fetch(`/profile/get/${profileId}`, {
                    method: "GET",
                    headers: { "Content-Type": "application/json" },
                });

                if (!response.ok) {
                    throw new Error("Failed to fetch task");
                }

                const profile = await response.json();

                Swal.fire({
                    title: "Edit Full Name",
                    html: `
                    <input type="text" id="full-Name" class="swal2-input" placeholder="Full-Name" value="${profile.name}">
                    `,
                    showCancelButton: true,
                    confirmButtonText: "Save",
                    preConfirm: () => {
                    const Name = document.getElementById("full-Name").value.trim();
                   

                    if (!Name ) {
                        Swal.showValidationMessage("Please enter all fields");
                        return false;
                    }

                    return { Name};
                    },
                }).then((result) => {
                    if (result.isConfirmed && result.value) {
                    fetch(`/profile/edit-name/${profileId}`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(result.value),
                    })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.error) throw new Error(data.error);
                        Swal.fire({
                        icon: "success",
                        title: "Success",
                        text: "Name updated successfully",
                        }).then(() => location.reload());
                    })
                    .catch((error) => {
                        Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: error.message || "Failed to update Name",
                        });
                    });
                    }
                });
                } catch (error) {
                Swal.fire({
                    icon: "error",
                    title: "Error",
                    text: error.message || "Failed to fetch Phone Number",
                });
                }
            });
        });

    });
</script>
</html>
